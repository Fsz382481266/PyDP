name: Windows Package github deploy

on: push

jobs:
  build-windows-wheel:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
      with:
          submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel twine auditwheel
    - name: Setup msbuild
      uses: microsoft/setup-msbuild@v1.0.0
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    - name: Setup Bazel
      uses: abhinavsingh/setup-bazel@v3
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    - name: Build PyDP
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
         bazel build --cxxopt='/std:c++17' src/python:bindings_test --verbose_failures
         copy bazel-bin\src\bindings\_pydp.so src\pydp\_pydp.pyd
         python setup.py bdist_wheel
         $version=(python -c "import pydp; print(pydp.__version__)")
         echo "::set-output name=version::$version"
         $wheel_path=ls .\dist
         echo "::set-output name=wheel_path::$wheel_path"
         $wheel_name=(ls .\dist).name
         echo "::set-output name=wheel_name::$wheel_name"

      id: build-pydp
    - name: Test the wheel
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
          python -m pip install ${{steps.build-pydp.outputs.wheel_path}}
          python -m pip install pytest
          pytest tests/
          twine check ${{steps.build-pydp.outputs.wheel_path}}  
    
    - name: Publishing the wheel
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TOKEN }}
      run: |
        twine upload --skip-existing ${{steps.build-pydp.outputs.wheel_path}}
